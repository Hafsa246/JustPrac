import win32com.client
import datetime

def count_emails_by_sender(subfolder_path, date_to_check):
    outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
    inbox = outlook.GetDefaultFolder(6)  # Inbox folder

    # Get the specified subfolder within the Inbox
    subfolder = inbox.Folders.Item(subfolder_path)

    counts = {}

    # Calculate the date for the previous day
    previous_day = date_to_check - datetime.timedelta(days=1)
    previous_day_start = previous_day.replace(hour=0, minute=0, second=0, microsecond=0)  # Make timezone-naive
    previous_day_end = previous_day.replace(hour=23, minute=59, second=59, microsecond=999)  # Make timezone-naive

    for item in subfolder.Items:
        try:
            if item.Class == 43:  # Mail item class
                received_time = item.ReceivedTime.replace(tzinfo=None)  # Make timezone-naive
                sender_email = item.SenderEmailAddress

                # Check if the email falls within the specified date range
                if previous_day_start <= received_time <= previous_day_end:
                    counts[sender_email] = counts.get(sender_email, 0) + 1
        except Exception as e:
            print(f"Error processing email: {e}")

    return counts

if __name__ == "__main__":
    subfolder_path = "Subfolder Name"  # Specify the subfolder name
    date_to_check = datetime.datetime.now()  # Current date
    print("Date to check:", date_to_check)

    counts = count_emails_by_sender(subfolder_path, date_to_check)

    for sender_email, count in counts.items():
        print("Number of emails from sender '{}' received on the previous day: {}".format(sender_email, count))
