import win32com.client
import datetime

def count_emails_by_address_book_entry(address_book_entries, date_to_check):
    outlook = win32com.client.Dispatch("Outlook.Application").GetNamespace("MAPI")
    inbox = outlook.GetDefaultFolder(6)  # 6 corresponds to the Inbox folder

    counts = {}
    for entry in address_book_entries:
        try:
            # Format date_to_check as a string compatible with Outlook's Restrict method
            date_str = date_to_check.strftime('%m/%d/%Y 11:59 PM')

            # Calculate the date for the previous day
            previous_day = date_to_check - datetime.timedelta(days=1)
            previous_day_start = previous_day.replace(hour=0, minute=0, second=0)
            previous_day_end = previous_day.replace(hour=23, minute=59, second=59)

            previous_day_start_str = previous_day_start.strftime('%m/%d/%Y %I:%M %p')
            previous_day_end_str = previous_day_end.strftime('%m/%d/%Y %I:%M %p')

            # Construct the restriction to filter emails based on the sender's address
            restriction = "[SenderEmailAddress] = '{}' AND [ReceivedTime] >= '{}' AND [ReceivedTime] <= '{}'".format(entry, previous_day_start_str, previous_day_end_str)
            print("Restriction:", restriction)

            # Restrict emails based on the address book entry's email address and date (from previous day)
            emails = inbox.Items.Restrict(restriction)
            print("Number of emails retrieved from address book entry '{}': {}".format(entry, len(emails)))

            # Count the number of emails from this address book entry
            count = len(emails)
            counts[entry] = count
        except Exception as e:
            print(f"Error counting emails for address book entry '{entry}': {e}")

    return counts

if __name__ == "__main__":
    address_book_entries = ["John Doe", "Jane Smith"]  # Add address book entries here
    date_to_check = datetime.datetime.now()  # Current date
    print("Date to check:", date_to_check)
    
    counts = count_emails_by_address_book_entry(address_book_entries, date_to_check)
    
    for entry, count in counts.items():
        print("Number of emails from address book entry '{}' received on the previous day: {}".format(entry, count))
